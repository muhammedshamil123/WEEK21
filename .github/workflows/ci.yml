name: CI/CD Pipeline for user-api

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the latest code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Setup Go environment and build the binary
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.22.5'

      - name: Build Go Application
        run: |
          go mod tidy
          go test ./... -v
          go build -o user-api ./main.go

      # Step 3: Upload build artifact
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: user-api
          path: ./user-api

      # Step 4: Setup SSH key
      - name: Setup SSH Key
        env:
          SSH_KEY: ${{ secrets.DEPLOY_KEY }}
        run: |
          echo "$SSH_KEY" > GFRESHPROJECT2024.pem
          chmod 400 GFRESHPROJECT2024.pem

      # Step 5: Deploy and restart the service on EC2
      - name: Deploy to EC2
        env:
          EC2_USER: ${{ secrets.DEPLOY_USER }}
          EC2_IP: ${{ secrets.DEPLOY_SERVER }}
        run: |
          # Upload the binary
          scp -i GFRESHPROJECT2024.pem -o StrictHostKeyChecking=no ./user-api $EC2_USER@$EC2_IP:/home/ubuntu/WEEK21/user-api

          # Restart the user-api service
          ssh -i GFRESHPROJECT2024.pem -o StrictHostKeyChecking=no $EC2_USER@$EC2_IP << 'EOF'
            chmod +x /home/ubuntu/WEEK21/user-api
            sudo systemctl restart user-api.service
            sudo systemctl status user-api.service
          EOF

      # Step 6: Cleanup SSH key
      - name: Cleanup
        run: |
          rm -f GFRESHPROJECT2024.pem
